#define LUT_SIZE 8

float ltc_mag[64] = {
	1.000000, 1.000000, 0.999138, 0.953919, 0.855017, 0.677721, 0.475624, 0.306905,
	1.000000, 0.999990, 0.995492, 0.955938, 0.852346, 0.676815, 0.478562, 0.311751,
	1.000000, 0.999952, 0.993337, 0.950365, 0.844905, 0.674537, 0.487632, 0.327273,
	1.000000, 0.999865, 0.991766, 0.942684, 0.831852, 0.673589, 0.505564, 0.355949,
	1.000000, 0.999665, 0.986371, 0.930421, 0.813602, 0.678975, 0.537882, 0.403271,
	1.000000, 0.999025, 0.973317, 0.900245, 0.804126, 0.703751, 0.594890, 0.481143,
	1.000000, 0.992850, 0.926124, 0.860745, 0.833379, 0.782873, 0.703637, 0.620129,
	0.987461, 0.938899, 0.942983, 0.943682, 0.943818, 0.943681, 0.943351, 0.942877
};

float4 ltc_mat[64] = {
	float4(0.000200, -0.000000, 1.000000, -0.000000),
	float4(0.040821, -0.000000, 1.000000, -0.000000),
	float4(0.163499, -0.000000, 1.000000, -0.000000),
	float4(0.359810, -0.000000, 1.000000, -0.000000),
	float4(0.608219, -0.000000, 1.000000, -0.000000),
	float4(0.849327, -0.000000, 1.000000, -0.000000),
	float4(1.026876, -0.000000, 1.000000, -0.000000),
	float4(1.127918, -0.000000, 1.000000, -0.000000),
	float4(0.000200, -0.000046, 1.052217, 0.228243),
	float4(0.040821, -0.009316, 1.052066, 0.228242),
	float4(0.163218, -0.036566, 1.051517, 0.228141),
	float4(0.360871, -0.077435, 1.049110, 0.226851),
	float4(0.608870, -0.112986, 1.040456, 0.216178),
	float4(0.850681, -0.110371, 1.022363, 0.171798),
	float4(1.033758, -0.063836, 1.011022, 0.089896),
	float4(1.130218, 0.000062, 1.000010, -0.000080),
	float4(0.000200, -0.000096, 1.232269, 0.481573),
	float4(0.040829, -0.019653, 1.232083, 0.481559),
	float4(0.163323, -0.077152, 1.229494, 0.481157),
	float4(0.361362, -0.161748, 1.215935, 0.476966),
	float4(0.602530, -0.224893, 1.149731, 0.444834),
	float4(0.832866, -0.211716, 1.066321, 0.339254),
	float4(1.033638, -0.123274, 1.025543, 0.170803),
	float4(1.137644, 0.000154, 0.999953, -0.000082),
	float4(0.000199, -0.000159, 1.627474, 0.797472),
	float4(0.040836, -0.032524, 1.635685, 0.797401),
	float4(0.164108, -0.127318, 1.628042, 0.795956),
	float4(0.365844, -0.258932, 1.575327, 0.783120),
	float4(0.602895, -0.339455, 1.372632, 0.710306),
	float4(0.825683, -0.302224, 1.158343, 0.512880),
	float4(1.030563, -0.173519, 1.049980, 0.243539),
	float4(1.151713, 0.000105, 0.999957, -0.000055),
	float4(0.000198, -0.000248, 2.529443, 1.253956),
	float4(0.040880, -0.051100, 2.570697, 1.253684),
	float4(0.166706, -0.198049, 2.542881, 1.248409),
	float4(0.380361, -0.384441, 2.334701, 1.206127),
	float4(0.617299, -0.459699, 1.772357, 1.025249),
	float4(0.835445, -0.380695, 1.304201, 0.680722),
	float4(1.040850, -0.213042, 1.089431, 0.306573),
	float4(1.176060, 0.000010, 1.000023, -0.000021),
	float4(0.000187, -0.000388, 4.301116, 2.076506),
	float4(0.041070, -0.084546, 5.305590, 2.075270),
	float4(0.175521, -0.321638, 5.161014, 2.051541),
	float4(0.413187, -0.560077, 4.055352, 1.869406),
	float4(0.665130, -0.580464, 2.432246, 1.376237),
	float4(0.870094, -0.441204, 1.506300, 0.819691),
	float4(1.068578, -0.241436, 1.137736, 0.354430),
	float4(1.219174, -0.000534, 1.000063, 0.000162),
	float4(0.000144, -0.000631, 6.468958, 4.381222),
	float4(0.042200, -0.177353, 20.085962, 4.369584),
	float4(0.209979, -0.606367, 16.868328, 4.106197),
	float4(0.500901, -0.795643, 8.099620, 2.893355),
	float4(0.769693, -0.688227, 3.439625, 1.659662),
	float4(0.955036, -0.470746, 1.760819, 0.883184),
	float4(1.134532, -0.254869, 1.190455, 0.377490),
	float4(1.308330, -0.002944, 0.999844, 0.001275),
	float4(0.000102, -0.118482, 1184.816772, 1184.816284),
	float4(0.319603, -3.097308, 7133.888672, 23.645655),
	float4(0.546638, -1.442077, 133.966263, 8.593670),
	float4(0.837342, -1.129903, 20.226521, 3.658263),
	float4(1.004258, -0.809128, 5.700182, 1.768790),
	float4(1.117055, -0.531464, 2.269246, 0.923613),
	float4(1.336692, -0.312752, 1.241618, 0.414403),
	float4(1.670654, -0.056394, 0.998759, 0.033416)
};

float4 GetLUTMat(float2 p)
{
	for (int x = 0; x < LUT_SIZE; x++)
	{
 	 	for (int y = 0; y < LUT_SIZE; y++)
		{
			if (x == int(p.x) && y == int(p.y))
			{
				float4 a = lerp(ltc_mat[y*LUT_SIZE+x], ltc_mat[y*LUT_SIZE+x+1], frac(p.x));
				float4 b = lerp(ltc_mat[(y+1)*LUT_SIZE+x], ltc_mat[(y+1)*LUT_SIZE+x+1], frac(p.x));
				return lerp(a,b,frac(p.y));
			}
		}
	}

	return 0;
}

float GetLUTMag(float2 p)
{
	for (int x = 0; x < LUT_SIZE; x++)
	{
		for (int y = 0; y < LUT_SIZE; y++)
		{
			if (x == int(p.x) && y == int(p.y))
			{
				float a = lerp(ltc_mag[y*LUT_SIZE+x], ltc_mag[y*LUT_SIZE+x+1], frac(p.x));
				float b = lerp(ltc_mag[(y+1)*LUT_SIZE+x], ltc_mag[(y+1)*LUT_SIZE+x+1], frac(p.x));
				return lerp(a,b,frac(p.y));
			}
		}
	}

	return 0;
}