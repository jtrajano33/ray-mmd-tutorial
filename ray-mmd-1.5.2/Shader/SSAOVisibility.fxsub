#include "../ray.conf"
#include "../shader/common.fxsub"

#if SSAO_RECIEVER_ALPHA_MAP_ENABLE
texture DiffuseMap: MATERIALTEXTURE;
sampler DiffuseMapSamp = sampler_state {
	texture = <DiffuseMap>;
	MinFilter = POINT; MagFilter = POINT; MipFilter = POINT;
	ADDRESSU = WRAP; ADDRESSV = WRAP;
};
#endif

#if SSAO_VISIBILITY_ENABLE
void DepthObjectVS(
	in float4 Position : POSITION,
	in float2 Texcoord : TEXCOORD0,
	out float2 oTexcoord : TEXCOORD0,
	out float4 oPosition : POSITION)
{
	oTexcoord = Texcoord;
	oPosition = mul(Position, matViewProject);
}

float4 DepthObjectPS(float3 coord : TEXCOORD0) : COLOR
{
#if SSAO_RECIEVER_ALPHA_ENABLE
	clip(!opadd - 0.001f);
	float alpha = MaterialDiffuse.a;
#if SSAO_RECIEVER_ALPHA_MAP_ENABLE
	if (use_texture) alpha *= tex2D(DiffuseMapSamp, coord.xy).a;
#endif
	clip(alpha - 0.01);
#endif

	return visibility;
}

#define OBJECT_TEC(name, mmdpass)\
	technique name<string MMDPass = mmdpass;\
	>{\
		pass DrawObject {\
			AlphaTestEnable = false; AlphaBlendEnable = false;\
			VertexShader = compile vs_3_0 DepthObjectVS();\
			PixelShader  = compile ps_3_0 DepthObjectPS();\
		}\
	}

OBJECT_TEC(DepthTec, "object")
OBJECT_TEC(DepthTecBS, "object_ss")
#else
technique DepthTec<string MMDPass = "object";>{}
technique DepthTecBS<string MMDPass = "object_ss";>{}
#endif

technique EdgeTec<string MMDPass = "edge";>{}
technique ShadowTec<string MMDPass = "shadow";>{}
technique ZplotTec<string MMDPass = "zplot";>{}